.container {
  padding-top: 5em;
  margin: 0 auto;
  max-width: 1170px;
  display: grid;

  @include respond-to(xs) {
    padding-top: 7em;
  }

}

@keyframes placeHolderShimmer{
  0%{
    background-position: -468px 0
  }
  100%{
    background-position: 468px 0
  }
}

.article-loader {
  animation-duration: 1s;
  animation-fill-mode: forwards;
  animation-iteration-count: infinite;
  animation-name: placeHolderShimmer;
  animation-timing-function: linear;
  background: $color2;
  background: linear-gradient(to right, #eeeeee 8%, $color2 18%, #eeeeee 33%);
  background-size: 800px 104px;
  height: 300px;
  position: relative;
  border: 0!important;
}


.article {
  opacity: 0.1;
  border-bottom: 4px dashed $color2;
  margin-bottom: 5em;

  .article-image {
    overflow: hidden;
    img {
      max-width: 100%;
      transition: transform 0.5s;


      &:hover {
        transform: scale(1.1);
      }
    }
  }

  .article-title {
    a {
      font-size: 30px;
      color: $color2;
      font-weight: bold;
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }
    }
  }


  .article-content{
    p {
      color: $color2;
    }

    script, noscript, embed, .wp-socializer {
      display: none;
    }

    iframe {
      max-width: 100%;
    }


    img {
      max-width: 100%;
      transition: transform 0.5s;


      &:hover {
        transform: scale(1.1);
      }
    }

    .ngg-gallery-thumbnail-box {
      display: inline-block;
    }
  }
}

form {
  position: fixed;
  padding-left: 1em;

  @include respond-to(xs) {
    position: initial;
  }
  input {
    display: block;
  }

  input[type="button"] {
    background-color: $color2; /* Green */
    border: none;
    color: white;
    padding: 1em;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    &:hover, &:active, &:focus{
      outline: none;
    }
    &:hover {
      cursor: pointer;
    }
    &:disabled {
      background-color: gray;
    }
  }
}

.loader {
  width: $cubeSize;
  height: $cubeSize;
  animation: loaderAnim 0.5s infinite;
  display: none;
  outline: 1px solid transparent;
  .largeBox {
    height: $cubeSize;
    width: $cubeSize;
    background-color: $color3;
    outline: 1px solid transparent;
    position: fixed;
  }
  .smallBox {
    height: $cubeSize;
    width: $cubeSize;
    background-color: $dark;
    position: fixed;
    z-index: 1;
    outline: 1px solid transparent;
    animation: smallBoxAnim 1.25s alternate infinite ease-in-out;
  }
}

@keyframes smallBoxAnim {
  0% {transform: scale(0.2);}
  100% {transform: scale(0.75);}
}

@keyframes loaderAnim {
  0% {transform: rotate(0deg);}
  100% {transform: rotate(90deg);}
  // source: https://codepen.io/danhearn/pen/MvqgdM
}